From a1044e6639316ee876031595a0c09889c28098ce Mon Sep 17 00:00:00 2001
From: Marek Kasik <mkasik@redhat.com>
Date: Mon, 15 Oct 2018 17:53:45 +0200
Subject: [PATCH 2/2] Allow duplicated objects in incremental updates

Do not fail when encountering duplicated object in different
update section of the file.
---
 poppler/XRef.cc | 18 ++++++++++++++----
 1 file changed, 14 insertions(+), 4 deletions(-)

--- a/poppler/XRef.cc
+++ b/poppler/XRef.cc
@@ -905,6 +905,7 @@
   char* token = NULL;
   bool oneCycle = true;
   int offset = 0;
+  std::vector<bool> seen;
 
   gfree(entries);
   capacity = 0;
@@ -925,6 +926,9 @@
     if (!str->getLine(buf, 256)) {
       break;
     }
+    if (strstr(buf, "%%EOF")) {
+      seen.assign(seen.size(), false);
+    }
     p = buf;
 
     // skip whitespace
@@ -977,6 +981,9 @@
           if ((*p & 0xff) == 0) {
             //new line, continue with next line!
             str->getLine(buf, 256);
+            if (strstr(buf, "%%EOF")) {
+              seen.assign(seen.size(), false);
+            }
             p = buf;
           } else {
 	    ++p;
@@ -991,6 +998,9 @@
               if ((*p & 0xff) == 0) {
                 //new line, continue with next line!
                 str->getLine(buf, 256);
+                if (strstr(buf, "%%EOF")) {
+                  seen.assign(seen.size(), false);
+                }
                 p = buf;
               } else {
 		++p;
@@ -1006,12 +1016,11 @@
 		    if (resize(newSize) != newSize) {
 		      error(errSyntaxError, -1, "Invalid 'obj' parameters");
 		      return gFalse;
+		    } else {
+		      seen.resize (newSize, false);
 		    }
 		  }
-		  if (entries[num].type != xrefEntryFree &&
-		      gen == entries[num].gen &&
-		      entries[num].offset != pos - start &&
-		      entries[num].offset != -1) {
+		  if (seen[num]) {
 		    error(errSyntaxError, -1, "Duplicate object reference {0:d} {1:d}", num, gen);
 		    return gFalse;
 		  }
@@ -1020,6 +1029,7 @@
 		    entries[num].offset = pos - start;
 		    entries[num].gen = gen;
 		    entries[num].type = xrefEntryUncompressed;
+		    seen[num] = true;
 		}
 	        }
 	      }
